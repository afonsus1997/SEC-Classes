$date
	Thu Oct 10 15:10:46 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fulladder_tb $end
$var wire 1 ! CO $end
$var wire 4 " S [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % CI $end
$scope module uut $end
$var wire 4 & aa [3:0] $end
$var wire 4 ' bb [3:0] $end
$var wire 4 ( ciinput [3:0] $end
$var wire 1 % cri $end
$var wire 1 ! cro $end
$var wire 4 ) ss [3:0] $end
$scope begin adder[0] $end
$scope module abc $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , ci $end
$var wire 1 - co $end
$var wire 1 . s $end
$upscope $end
$upscope $end
$scope begin adder[1] $end
$scope module abc $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 ci $end
$var wire 1 2 co $end
$var wire 1 3 s $end
$upscope $end
$upscope $end
$scope begin adder[2] $end
$scope module abc $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 ci $end
$var wire 1 7 co $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$scope begin adder[3] $end
$scope module abc $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; ci $end
$var wire 1 < co $end
$var wire 1 = s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
0<
x;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
1-
0,
1+
1*
bx000 )
b0x (
b1 '
b1 &
x%
b1 $
b1 #
bx000 "
x!
$end
#20000
18
0-
bx110 "
bx110 )
13
0+
15
0*
1/
b100 $
b100 '
b10 #
b10 &
#40000
